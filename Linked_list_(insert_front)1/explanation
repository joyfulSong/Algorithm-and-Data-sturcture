1) 구조체를 생성. 

구조체 Node 안에는 data, next라는 두개의 field가 존재. data와 next가 한 set로 존재하도록. ㅁㅁ 방 두개

linking 할 다음 노드 주소를 가리키도록. 포인터가 있음

​

2) head는 global variable, can be accessed anywhere

​

3) 받은 숫자를 맨 앞에 삽입하는 insert 함수

포인터 형식으로, 동적할당으로 temp 메모리를 잡고 (new int면 int 타입으로 메모리를 할당하는 것이고. )  temp 주소를 가리키는 포인터를 dereferencing 한, data 필드에 받은 x를 담는다. 

(*temp).data = x 는 temp -> data = x; 와 같음 

temp에 저장된 주소값에 대해 next라는 field를 dereferencing 해서 head값을 저장 (가장 처음이면 NULL이 저장되어 있으니, temp상태의 next에 NULL을 넣어서 head를 비워줌)
head는 맨 앞을 가리켜야 하는데, 만약 맨앞에 새로 추가가 된다면 이전에 존재하던 node를 방금 만든 맨앞 노드와 linking 시키고 (= 새로만든 노드의 포인터가 이전 노드의 주소 가리키도록)

head에 있던 값을 비우고, 새로 만든 노드의 주소(위 사진에서 temp)를 넣어준다. 


4) 전체 배열을 출력하는 print함수 

x를 삽입할 때 갱신한 head를 가져와 temp에 넣어두고, while문을 돌면서 linking에 의해 바뀌게 되도록 하려고 temp를 사용한다. 

while 문에서는 node의 포인터 Node* temp가 NULL일 경우, end 지점이므로 탈출하게 된다. 

head에 저장되어있던 주소로 가서 data를 출력,  현재 temp 상태의 next라는 field 에는 다음 노드의 주소를 갖고 있으므로 갱신

​

5) main

head는 우선 NULL을 담는다. 

n = 할당하고자 하는 정수의 개수에 대한 변수

x = 삽입하고자 하는 정수 한개

i = n개 배열에 대해 x를 삽입하기 위해 for문을 돌 때 사용 

insert, print 함수 사용. 

​
